openapi: 3.0.2
info:
  title: API
paths:
  /api/resources/{resource-id}/sub-resources/{sub-resource-id}:
    get:
      operationId: getSubResource
      parameters:
        - name: resource-id
          in: query
          schema:
            $ref: '#/components/schemas/resource-id'
        - $ref: '#/components/parameters/sub-resource-id'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sub-resource'
        '4xx':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem'
components:
  schemas:
    resource-id:
      type: string
      description: Resource id
      minLength: 1
      format: uuid
    sub-resource-id:
      type: string
      description: Resource id
      minLength: 1
      format: uuid
    problem:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: A URI reference that uniquely identifies the problem type. Optional.
          default: 'about:blank'
          example: '/problem/ConnectionError'
        title:
          type: string
          description: A short summary of the problem type. Optional.
          example: Service Unavailable
        status:
          type: integer
          format: int32
          description: The HTTP status code generated by the origin server for this occurrence of the problem
          example: 404
        detail:
          type: string
          description: A human readable explanation specific to this occurrence of the problem. Optional.
          example: Connection to database timed out
        parameters:
          type: object
          additionalProperties: true
          example: Additional attributes of the problem. Implementations can choose to ignore this in favor of concrete, typed fields.
    sub-resource:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/sub-resource-id'
      oneOf:
        - $ref: '#/components/schemas/square'
        - $ref: '#/components/schemas/circle'
      discriminator:
        propertyName: shape-type
        mapping:
          square: '#/components/schemas/square'
          circle: '#/components/schemas/circle'
    shape:
      type: object
      required:
        - shape-type
        - position
        - rotation
        - name
      properties:
        shape-type:
          $ref: '#/components/schemas/shape-type'
        text:
          type: string
          minLength: 1
        rotation:
          type: number
          format: float
          default: 0
        position:
          type: object
          required:
            - x
            - y
          properties:
            x:
              type: integer
              format: int32
            y:
              type: integer
              format: int32
    square:
      allOf:
        - $ref: '#/components/schemas/shape'
        - type: object
          required:
            - size
          properties:
            size:
              type: integer
              format: int32
              exclusiveMinimum: true
              minimum: 0
    circle:
      allOf:
        - $ref: '#/components/schemas/shape'
        - type: object
          required:
            - diameter
          properties:
            diameter:
              type: integer
              format: int32
              exclusiveMinimum: true
              minimum: 0
    shape-type:
      type: string
      enum: ['square', 'circle', 'triangle']
  parameters:
    sub-resource-id:
      name: sub-resource-id
      in: query
      schema:
        $ref: '#/components/schemas/sub-resource-id'
